# Inspectors and spells are in place to attribute the correct flow
pcap $testdir/pcaps/google_http.pcap

# This test might not be valid, the files might be compared in text, rather than binary mode
cmp output.bill $testdir/alert_test_bill.expected.bill
stdout 'alerts_generated: 2'
stdout 'logs_generated: 2'
stdout 'binds: 4'
stdout 'tree_count: 4'
stdout 'output_bytes: 1004'

-- cfg.lua --

serializer_bill = { option_no_root_node = false,
                    bill_secret_sequence = '000000000000000000' }

logger_file = { file_name = 'output.bill',
                serializer = 'serializer_bill'}

alert_lioli = { logger = 'logger_file',
                testmode = true }

stream = {}
stream_tcp = {}
stream_udp = {}
http_inspect = {}

wizard = {
    spells = { { service = 'http', proto = 'tcp', to_server = {'GET'}, to_client = {'HTTP/'} } }
}

binder = {
    { when = { service = 'http' }, use = { type = 'http_inspect' } },
    { use = { type = 'wizard' } }
}

ips = {
  include = 'lua.rules'
}

-- lua.rules --

alert ip any any -> any any (
  msg:"This is a log of an http header";

  http_header:field host;
  lioli_bind:$.host;
  content:"google";

  http_method;
  lioli_bind:$.method;
)
